--
-- Script was generated by Devart dbForge Studio 2019 for MySQL, Version 8.2.23.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 11/4/2021 10:57:06 PM
-- Server version: 8.0.18
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

--
-- Set default database
--
USE todoappdata;

--
-- Drop procedure `procAddTask`
--
DROP PROCEDURE IF EXISTS procAddTask;

--
-- Drop procedure `procDeleteTask`
--
DROP PROCEDURE IF EXISTS procDeleteTask;

--
-- Drop procedure `proceGetTasksByOldDate`
--
DROP PROCEDURE IF EXISTS proceGetTasksByOldDate;

--
-- Drop procedure `procGetTasks`
--
DROP PROCEDURE IF EXISTS procGetTasks;

--
-- Drop procedure `procUpdateTask`
--
DROP PROCEDURE IF EXISTS procUpdateTask;

--
-- Drop table `task`
--
DROP TABLE IF EXISTS task;

--
-- Set default database
--
USE todoappdata;

--
-- Create table `task`
--
CREATE TABLE task (
  taskId char(36) NOT NULL DEFAULT '',
  taskName varchar(255) NOT NULL DEFAULT '',
  createdDate datetime DEFAULT NULL,
  status bit(1) NOT NULL DEFAULT b'0',
  PRIMARY KEY (taskId)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 3276,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'luu c?ng vi?c theo ng';

DELIMITER $$

--
-- Create procedure `procUpdateTask`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE procUpdateTask (IN taskId char(36), IN taskName varchar(255), IN createdDate datetime, IN status bit)
BEGIN
  UPDATE task
  SET taskName = taskName,
      createdDate = createdDate,
      status = status
  WHERE task.taskId = taskId;
END
$$

--
-- Create procedure `procGetTasks`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE procGetTasks ()
BEGIN
  SELECT
    taskId,
    taskName,
    createdDate,
    status
  FROM task
  ORDER BY createdDate DESC;

END
$$

--
-- Create procedure `proceGetTasksByOldDate`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE proceGetTasksByOldDate ()
BEGIN
  SELECT
    taskId,
    taskName,
    createdDate,
    status
  FROM task
  ORDER BY createdDate ASC;
END
$$

--
-- Create procedure `procDeleteTask`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE procDeleteTask (IN taskId char(36))
BEGIN
  DELETE
    FROM task
  WHERE task.taskId = taskId;

END
$$

--
-- Create procedure `procAddTask`
--
CREATE PROCEDURE procAddTask (IN taskId char(36), IN taskName varchar(255), IN `createdDate` datetime, IN status bit)
SQL SECURITY INVOKER
BEGIN
  INSERT INTO task (taskId, taskName, createdDate, status)
    VALUES (UUID(), taskName, createdDate, 0);

END
$$

DELIMITER ;

-- 
-- Dumping data for table task
--
INSERT INTO task VALUES
('142cb08f-7c31-21fa-8e90-67245e8b283e', 'đi nấu canh', '2010-03-17 00:00:00', True),
('27e3bc8a-3bf1-11ec-bd5d-544810d3b920', 'đi nấu cơm', '1982-03-12 23:59:01', True),
('4e272fc4-7875-78d6-7d32-6a1673ffca7c', 'đi nhặt rau', '2021-09-09 00:00:00', True),
('9136ecc3-3bf9-11ec-bcd4-544810d3b920', 'Game master 2', '2021-11-01 00:00:00', False),
('d04218c3-3bff-11ec-bcd4-544810d3b920', 'đi ngủ', '2021-11-03 00:00:00', False);

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;